;	18-FEB-77
;	09:30:00
	.TITLE BASEBALL GAME
	.ASECT
	.=10000			;ORG AT HEX 1000
START:	LDX I,ZLOW-1
	TXS
	JSR CLRZR1		;CLEAR PAGE 0
	LDA I,100
	STA Z,SPCFCT		;SET ATTRACT MODE
	JSR CLN0
ATTRCT:	JSR CLN1		;CENTER PITCHER AND BALL
	JSR SYNWT0
	LDX I,5
ATTR0:	LDA AX,ATARI-1		;WRITE 'ATARI' ON SCREEN
	STA AX,PFLDL+55
	DEX
	BNE ATTR0
	LDA I,10
	STA Z,PCOKD
	LDA I,0			;CLEAR COIN COUNT AND TIMERS
	STA Z,COINT0
	STA Z,COINT1
	STA Z,COINC

; ATCTL = 0 - ATTRACT MESSAGE 0
;	= 1 - ATTRACT MESSAGE 1
;	= 2 - 
;	= 3 - 
;	= 4 - 
;	= 5 -
;	= 6 - COIN0 ACCEPTED
;	= 7 - COIN1 ACCEPTED

COINA4:	JSR SETRUN		;SET ATTRACT MODE RUNNERS
COINA2:	LDA A,WTCHDG		;PGM FAIL CODE
	LDA I,10		;DIAGNOSTIC?
	BIT A,TGLSW
	BNE COINA5		;NO
	LDA I,0			;YES
	STA Z,PCOKD
	CLI
COINA6:	JSR SYNWT
	LDY I,21.
	LDX I,-4
DIAG1:	LDA ZX,BLPTY+1
	JSR OCTDSP
	DEY
	LDA I,300
	STA AY,PFLDH+240
	DEY
	INX
	BNE DIAG1
	STA A,WTCHDG
	LDA I,10
	BIT A,TGLSW		;STILL SET TO DIAGNOSTIC?
	BEQ COINA6		;YES
	SEI			;NO. RESET
	JMP START
COINA5:	LDA I,4
	BIT A,TGLSW		;COIN0 SWITCH OPEN?
	BEQ COINA		;NO
	BIT Z,ATCTL		;COIN ALREADY COUNTED?
	BVS COINB		;YES
	INC Z,COINT0		;NO.DE-BOUNCE TIME OUT?
	BNE COINB		;NO
	LDA I,100		;YES.COUNT COIN.
	ORA Z,ATCTL
	JSR COINOP		;CORRECT NUMBER OF COINS ENTERED?
	BNE COINB		;NO
COINA3:	LDA I,0
	STA A,LAMP		;TURN ON START GAME LAMP.
COINA7:	LDA I,1
	STA A,WTCHDG
	BIT A,TGLSW		;START BUTTON PRESSED?
	BNE COINA7		;NO
	STA A,LAMP		;TURN OFF START LAMP
	JMP CLEAN		;BEGIN GAME
COINA:	STA Z,COINT0		;INITIALISE DE-BOUNCE TIMER
	LDA I,277
	AND Z,ATCTL
	STA Z,ATCTL		;CLEAR COIN ACCEPTED BIT
COINB:	LDA I,2
	BIT A,TGLSW		;COIN1 SWITCH OPEN?
	BEQ COINA1		;NO
	BIT Z,ATCTL		;COIN1 ALREADY ACCEPTED?
	BMI COINA8		;YES
	INC Z,COINT1		;NO.DE-BOUNCE TIME OUT?
	BNE COINA8		;NO
	LDA I,200		;YES
	ORA Z,ATCTL		;SET COIN ACCEPT BIT
	JSR COINOP		;CORRECT NUMBER OF COINS ENTERED?
	BEQ COINA3		;YES
	BNE COINA8
COINA1:	STA Z,COINT1		;NO.INITIALISE DE-BOUNCE TIMER
	LDA I,177
	AND Z,ATCTL
	STA Z,ATCTL		;CLEAR COIN ACCEPT BIT
COINA8:	JMP COINA2

COINOP:	AND I,370
	STA Z,ATCTL		;FORCE COIN MESSAGE ON
	INC Z,COINC		;COUNT COIN
	LDA I,2
	STA Z,ATTCT		;FORCE COIN OPTION MESSAGE TO DISPLAY
	LDA A,TGLSW		;GET COIN OPTION SWITCH SETTINGS
	LSR
	LSR
	LSR
	LSR
	AND I,3
	TAX
	LDA Z,COINC
	CMP AX,COINS		;CORRECT NUMBER OF COINS ENTERED?
	RTS
COINS:	.BYTE 1,2,4,4

;	PLAYFIELD GENERATOR
;
CLEAN:	JSR CLN0
	LDA I,0
	STA Z,SCR1		;ZERO SCORES
	STA Z,SCR0
	LDA I,1			;INITIALIZE INNING
	STA Z,INNING
	LDA I,8.		;MESSAGE BLINK TIME
	STA Z,SPCNT1
	LDA I,40		;FORCE CHANGE SIDES MODE
	STA Z,SPCFCT
BGPTCH:	JSR CLRZR0		;ERASE PAGE 0
	LDA I,300
	AND Z,PCOKD
	STA Z,PCOKD		;CLEAR PCOKD
SYNCLP:	JSR CLN1		;CENTER PITCHER AND BALL
	LDA I,10		;ENABLE VIDEO DISPLAY
	ORA Z,PCOKD
	STA Z,PCOKD
	CLI
;	
;	RUNNERS MUST TAKE BASE AFTER 4 BALLS
;	RUNNER(S) MUST COME IN AFTER HOME RUN

BASE:	LDA I,125
	STA A,WTCHDG
	BIT Z,RNRFLG		;RUNNERS?
	BNE BASE		;YES
	LDA I,367		;NO. TURN OF FOOTSTEP SOUND
	AND Z,SOUND
	STA Z,SOUND
	LDA I,76
	BIT Z,SPCFCT		;WAIT FOR FLASHING MESSAGES TO STOP
	BNE BASE
	LDA I,210		;CLEAR CONTROL BYTE
	AND Z,PCOKD
	STA Z,PCOKD
	LDA Z,OUT
	CMP I,3			;3 OUTS?
	BMI PITCH		;NO
	LDA I,0			;YES
	STA Z,OUT		;CLEAR OUTS
PITCH:	LDA I,4
	STA A,WTCHDG		;PGM FAIL SAFE
	BIT Z,SOUND		;CROWD SOUNDS DIED?
	BNE PCH7		;NO
	LDA I,0			;TURN OFF ALL SOUNDS
	STA Z,SOUND
PCH7:	JMP PATCH0
	.REPT 7
	.BYTE 0
	.ENDR
	.=^H1140-4
PCH8:	LDA I,0			;YES. CLEAR INDICATOR
	STA Z,PTFLG
	LDA Z,BLPTY		;GET VALUE OF POT FOR BALL Y
	CMP I,10.		;PITCH COCKED?
	BPL PCH0		;NO
	LDA I,1
	BIT Z,SPCFCT		;SPECIAL EFFECTS?
	BNE PITCH		;YES
	LDA I,1			;NO
	ORA Z,PCOKD
	STA Z,PCOKD		;INDICATE PITCH COCKED
	LDA I,5
	STA WKA			;RESET TIMER
	LDA I,0
	STA Z,BLVEL		;ZERO BALL VELOCITY
	BEQ PITCH		;CONTINUE PITCH SEQUENCE
PCH0:	LDA Z,BY		;UPDATE BALL Y POSITION
	CLC
	ADC Z,BLPTY
	BCC PCH2
	LSR
	ORA I,200
	BMI PCH3
PCH2:	LSR			;DIVIDE BY 2
PCH3:	STA Z,BY		;UPDATE BALL'S Y
	LDA Z,BLPTY
	SEC
	SBC Z,BY		;COMPUTE X=NEWY-OLDY
	BMI PCH11
	CMP I,2			;DIFFERENCE < 2?
	BMI PCH1		;YES
VLTST:	CMP Z,BLVEL		;VELOCITY PEAK?
	BMI PCH11		;NO
VLTO:	STA Z,BLVEL		;STORE HIGHER VELOCITY
PCH11:	JMP PITCH		;CONTINUE PITCH SEQUENCE
PCH1:	LDA Z,BY		;COMPUTE A=OLDY-T1
	SEC
	SBC I,T1
	BMI PCH11		;IF MINUS THEN STILL PITCHING
PCH5:	LDA I,1
	BIT Z,PCOKD		;TEST FOR PITCH COCKED
	BEQ PCH11		;IF 0 THEN PITCH NOT YET COCKED
	LDA Z,BLVEL		;RANGE PITCH VELOCITY
	SEC
	SBC I,4			;TOO LOW?
	BMI SETMIN		;YES
	CMP I,VMAX		;TOO HIGH?
	BMI ADJVEL		;NO
	LDA I,VMAX		;YES
	BNE ADJVEL
SETMIN:	LDA I,VMIN
ADJVEL:	AND I,16		;GET 1 OF 8 Y VELOCITIES (FORCE EVEN)
	TAX
	LDA AX,VTBLA		;GET Y VELOCITY (LOW)
	STA Z,VELL
	LDA AX,VTBLA+1
	STA Z,VELH
	LDA I,2
	ORA Z,PCOKD		;SET BALL IN FLIGHT
	STA Z,PCOKD
	LDA Z,BY
	LSR
	LSR
	ORA I,200
	STA Z,BY
FLTLP:	JSR SYNWT		;BALL NOW ON WAY TO BAT
BATLP4:	LDA I,20		;OR HAS BEEN HIT AND MUST BE FIELDED
	STA A,WTCHDG
	BIT Z,PCOKD		;PITCHER FREE?
	BNE PCHLP0		;YES
	LDA Z,BLPTX		;NO
	STA Z,WKB
	LDA I,40		;=0.25
	JSR PROCP0		;MODULATE X POSITION OF PITCHED BALL
	CLC			;WITH 0.25 OF X POSITION
	ADC Z,BX		;OF PITCHER POT
	STA Z,BX
	CLC
	LDA Z,WKB		;UPDATE X POSITION OF BALL
	ADC Z,BXL
	STA Z,BXL
	BCC PCHLP1
	INC Z,BX
PCHLP1:	LDA Z,VELL		;UPDATE Y POSITION OF BALL ACCORDING TO
	CLC			;VALUE OF VELOCITY
	ADC Z,BYL
	STA Z,BYL
	LDA Z,BY
	ADC Z,VELH
	STA Z,BY
	BNE BAT
PCHLP0:	JSR BALMOV
	JSR UPDTBL		;MOVE BALL
	JSR RNOUT		;SEE IF RUNNER TAGGED OUT
	LDA Z,OUT
	CMP I,3			;3 OUTS?
	BMI FLTLP1
	JMP OUT3
FLTLP1:	LDA I,20
	BIT Z,PCOKD		;SEE IF BALL TO BE FIELDED
	BEQ BAT
	LDA I,377
	BIT Z,RNRFLG		;ANY RUNNERS?
	BEQ FLTLP2
	LDA I,125
	BIT Z,RNRFLG
	BNE FLTLP0		;RUNNERS STOPPED
	LDA I,40		;YES. SEE IF PITCHER FIELDED BALL
	BIT Z,PCOKD
	BNE FLTLP2
	LDA I,1
	BIT A,TGLSW		;BUTTON PUSHED?
	BEQ FLTLP0
	ASL Z,RNRFLG		;SET RUNNERS RUNNING
	JSR SETRN0
FLTLP0:	JMP BAT1
FLTLP2:	JMP BGPTCH
BAT:	LDA Z,BY
	CMP I,BATPOS		;SEE IF BALL AT BAT ZONE YET
	BCS BAT02
BTMTST:	LDA Z,BY
	CMP I,TOP
	BCS BAT03
	LDA Z,PCOKD		
	EOR I,20
	AND I,60		;SEE IF PITCHER STILL RUNNING AFTER BALL
	BNE BAT05
	LDA I,125
	BIT Z,RNRFLG		;ANY RUNNERS RUNNING?
	BNE HMRN0
	ASL Z,RNRFLG		;NOPE
	JSR SETRN0		;PUT RUNNERS IN MOTION
	JSR CLRZR0		;RESET
	LDA Z,PCOKD
	AND I,300		;FORCE RUNNERS TO TAKE ONE BASE
	ORA I,40
	STA Z,PCOKD
	JMP SYNCLP
HMRN0:	LDA I,21
	ORA Z,SPCFCT		;TURN ON *HOME RUN* MESSAGE
	STA Z,SPCFCT
	LDA I,100
	ORA Z,PCOKD
	STA Z,PCOKD
	JMP BGPTCH
BAT03:	CMP I,BOTTOM
	BCS BATLP5
	LDA I,20
	BIT Z,PCOKD
	BEQ BATLP2
BAT05:	JMP FLTLP
BATLP5:	JMP STRIKE
BAT02:	LDA Z,BX
	CMP I,174
	BCC BAT06
	SBC I,210
	BCS BAT06
	EOR I,377
	ADC I,1
	LSR
	TAX
	LDA AX,SPDTBL
	STA Z,SPDCST
	BNE BATLP2
BAT06:	LDA Z,BTPTY		;ALLOW BALL IF NO ATTEMPT AT BAT
	LSR
	LSR
	CMP I,11
	BMI BATLP5		;COUNT STRIKE OTHERWISE
	JMP BLL
BATLP2:	LDA I,17
	.REPT 8.
	NOP
	.ENDR
	.=^H12A0
BATLP1:	BIT Z,PTFLG		;ANY INTERRUPTS?
	BNE BATLP3		;YES
	LDA I,4
	BIT Z,PCOKD		;VSYNC PROCESSED?
	BEQ BATLP2
	EOR Z,PCOKD
	STA Z,PCOKD
	JMP BATLP4
BATLP3:	LDA I,0
	STA Z,PTFLG
	LDA Z,BTPTY
	LSR
	LSR
	CLC
	ADC I,BATPOS
	STA Z,WKA
	SEC
	SBC Z,BY
	BPL BATOK
	EOR I,377
	ADC I,1
BATOK:	CMP I,PROX		;BALL IN CLOSE PROXIMITY TO BAT?
	BMI S,5			;SKIP OVER JMP IF SO
	JMP BTMTST
	LDA Z,WKA
	CMP I,BATPOS+2
	BCC BAT04
	SBC I,BATPOS+2		;NORMALISE BY
	CMP I,13		;SEE IF BALL CROSSED UPPER WINDOW
	BMI BAT01
BAT04:	JMP STRIKE
BAT01:	TAX			;X = DISPLACEMENT FROM LOWER WINDOW
	ASL
	TAY
	LDA AY,SCTBB
	STA Z,SINE
	LDA AY,SCTBB+1
	STA Z,COSINE
	LDA AX,ALTBB		;ANGLE TABLE B
	STA Z,ANGLE
	LDA Z,BTVEL		;OLD BAT POT POSITION
	SEC
	SBC Z,BTPTY		;SUBTRACT NEW POT POSITION
	BMI BAT12
	CMP I,16
	BMI BAT11
	LDA I,16
	BNE BAT11
BAT12:	LDA I,0
BAT11:	STA Z,WKF
	LDA Z,SPDCST		;GET BAT SPEED CONSTANT
	STA Z,WKX
	LDA I,0
	STA Z,WKE
	JSR CMP6
	LDA Z,WKD		;WKD = NEW BAT VELOCITY
	AND I,16		;FORCE EVEN
	TAX
	LDA AX,VTBLA
	STA Z,VELL
	LDA AX,VTBLA+1
	STA Z,VELH
	LDA I,20
	ORA Z,PCOKD		;FREE PITCHER TO RUN
	STA Z,PCOKD
	LDA I,37
	STA Z,SOUND		;SET SOUND CONTROL BITS ON
	LDA I,3
	STA Z,SNDCNT		;SET FOOTSTEP SOUND TIMER
	JSR SYNWT		;WAIT FOR VSYNC
	LDA I,337
	STA A,PFLDL+160		;FLASH *
	JSR SYNWT		;SKIP A FRAME
	JSR SETRUN		;SET RUNNERS IN MOTION
	LDA I,0
	STA Z,BALL
	STA Z,STRK
BAT1:	LDA I,100		;INITIALIZE TO STANDING MAN
	STA Z,PCHCTL
	LDA Z,BLPTX
	STA Z,WKB
	JSR PROCP
	TAX
	CMP I,0			;PITCHER MOVING RIGHT OR LEFT
	BEQ PMYA		;NO
	BPL PML			;MOVING LEFT
	LDA I,0			;MOVING RIGHT
	BEQ S,4
PML:	LDA I,40		;USE LEFT PICTURE
	STA Z,PCHCTL
PMYA:	TXA
	CLC
	ADC Z,PX
	CMP I,4			;PITCHER AT RIGHT SIDE?
	BCC BAT0A		;YES
	CMP I,354		;PITCHER AT LEFT SIDE?
	BCS BAT0A		;YES
	STA Z,PX
	LDA Z,WKB
	ADC Z,PXL
	BCC BAT0
	INC Z,PX
BAT0:	STA Z,PXL
BAT0A:	LDA Z,BLPTY
	STA Z,WKB
	JSR PROCP
	TAX
	CMP I,0			;PITCHER MOVING UP OR DOWN?
	BEQ PNM			;NO
	LDA I,0			;RIGHT
	BIT Z,PCHCTL
	BVC PNM			;STANDING MAN SET?
	STA Z,PCHCTL
PNM:	TXA
	CLC
	ADC Z,PY
	CMP I,TOP+20		;PITCHER AT TOP OF SCREEN?
	BCC NPYA		;YES
	CMP I,BOTTOM		;PITCHER AT BOTTOM OF SCREEN?
	BCS NPYA		;YES
	STA Z,PY
	LDA Z,WKB
	ADC Z,PYL
	BCC NPY
	INC Z,PY
NPY:	STA Z,PYL
NPYA:	LDA I,17		;INITIALIZE TO STANDING MAN
	STA Z,PTCHRP
	LDA I,40
	BIT Z,PCHCTL
	BVS BAT0C		;STANDING MAN
	BNE BAT0B		;RUNNING LEFT
	LDA I,0
	STA Z,PTCHRP
BAT0B:	LDX Z,PX
	BIT Z,PCHCTL
	BPL BAT0D
	LDX Z,PY
BAT0D:	LDA I,364
	AND Z,PTCHRP
	STA Z,PTCHRP
	TXA
	LSR
	LSR
	AND I,3
	ORA Z,PTCHRP
	STA Z,PTCHRP
BAT0C:	LDA Z,PY
	SEC
	SBC Z,BY
	BMI BAT10
	CMP I,16.		;SEE IF PITCHER HAS CAUGHT BALL
	BPL BAT10
	LDA Z,BX
	SEC
	SBC Z,PX
	BMI BAT10
	CMP I,16.
	BPL BAT10
	LDA I,40		;TA-DA. BALL HAS BEEN FIELDED
	ORA Z,PCOKD
	STA Z,PCOKD		;INDICATE PITCHER IN PURSUIT
BAT10:	JMP BTMTST
BAT08:	LDA I,0
	STA A,FOOT
	BEQ BAT10
BAT07:	JMP BTMTST
BALMOV:	LDA I,40		;PITCHER IN PURSUIT?
	BIT Z,PCOKD
	BEQ BLMV0		;YES
	LDA Z,PY		;NO. BALL HAS BEEN CAUGHT
	SEC
	SBC I,10
	STA Z,BY
	CLC
	LDA Z,PX
	ADC I,10
	STA Z,BX
	LDA I,0
	STA Z,XVELH
	STA Z,XVELL
	STA Z,YVELH
	STA Z,YVELL
	RTS

BLMV0:	LDA Z,SINE
	STA Z,WKX		;WKX=SINE OF ANGLE
	LDX I,VELL


;	AT THIS POINT WKX CONTAINS AN 8 BIT UNSIGNED FLOATING POINT 
;	NUMBER WHERE THE BINARY POINT IS ASSUMED ONE PLACE TO THE
;	RIGHT OF THE MSB.
;
	JSR COMPUT		;COMPUTE VELY
	BIT Z,ANGLE
	BPL STVY
	JSR COMCD
STVY:	LDA Z,WKC
	STA Z,YVELL
	LDA Z,WKD
	STA Z,YVELH
	LDA Z,COSINE
	STA Z,WKX
	LDX I,VELL
	JSR COMPUT		;COMPUTE VELX
	BIT Z,ANGLE
	BMI TSTV
	BVC STVX
	BVS CMPX
TSTV:	BVS STVX
CMPX:	JSR COMCD		;COMPLIMENT CD
STVX:	LDA Z,WKC
	STA Z,XVELL
	LDA Z,WKD
	STA Z,XVELH
	RTS

COMPUT:	LDA ZX,0		;GET VELOCITY LOW
	STA Z,WKE
	LDA ZX,1		;GET VELOCITY HIGH
	STA Z,WKF
CMP6:	LDA I,0
	STA Z,WKC		;CLEAR CD REG
	STA Z,WKD
	LDY I,8.		;BIT COUNT
CMP3:	ASL Z,WKX
	BCC CMP0
	CLC
	LDA Z,WKE
	ADC Z,WKC
	STA Z,WKC
	LDA Z,WKF
	ADC Z,WKD
	STA Z,WKD
CMP0:	LDA Z,WKF
	BPL CMP4
	LSR
	ORA I,200
	STA Z,WKF
	BMI CMP5
CMP4:	LSR Z,WKF
CMP5:	BCC CMP1
	LDA Z,WKE
	LSR
	ORA I,200
	STA Z,WKE
	BMI CMP2
CMP1:	LSR Z,WKE
CMP2:	DEY
	BNE CMP3
	RTS

COMCD:	LDA Z,WKC
	EOR I,377
	STA Z,WKC
	LDA Z,WKD
	EOR I,377
	STA Z,WKD
	INC Z,WKC
	BNE CMCD0
	INC Z,WKD
CMCD0:	RTS


PROCP:	LDA I,155		;EQUIV OF 0.75
PROCP0:	STA Z,WKX
	LDX I,4
	LDA I,0
	STA Z,WKE
	LDA Z,WKB
	AND I,374
	SEC
	SBC I,30.
	STA Z,WKF
	STA Z,WKB
	JSR CMP6
	LDA Z,WKD		;WKD = NEW VALUE
	STA Z,WKB
	BMI SET1
	LDA I,0
	CLC
	BCC ROLA
SET1:	ORA I,377
	SEC
ROLA:	ROL Z,WKB
	ROL
	DEX
	BNE ROLA
	RTS

BLL:	INC Z,BALL
	LDA Z,BALL
	CMP I,4
	BMI STJP
	JSR SETRUN		;SET RUNNERS IN MOTION
	LDA I,0
	STA Z,BALL
	STA Z,STRK
	LDA I,40
	ORA Z,PCOKD
	STA Z,PCOKD
	LDA I,3
	ORA Z,SPCFCT		;TURN ON WALK INDICATOR
	STA Z,SPCFCT
	LDA I,12
	STA Z,SOUND		;TURN ON SOFT CROWD SOUND
	JMP SYNCLP
STRIKE:	INC Z,STRK
	LDA Z,STRK
	CMP I,3
	BPL ST0
STJP:	JSR SYNWT		;WAIT FOR VSYNC
	LDA I,10
	ORA Z,SOUND
	STA Z,SOUND
	LDA I,0
	STA Z,FTCNT		;ZERO FOOT STEP COUNTER
	JSR SYNWT
	JMP BGPTCH
ST0:	INC Z,OUT
	LDA I,4
	ORA Z,SPCFCT
	STA Z,SPCFCT
	LDA Z,OUT
	CMP I,3
	BMI STJP
OUT3:	LDA I,3			;DISPLAY 3 OUTS
	STA Z,OUT
	LDA I,200
	EOR Z,PCOKD
	STA Z,PCOKD
	LDA I,5
	ORA Z,SPCFCT
	STA Z,SPCFCT
OUT3B:	LDA I,125
	BIT Z,RNRFLG		;ANY RUNNERS?
	BEQ OUT5
OUT3A:	BIT Z,RNRPFL		;WAIT FOR BREAK IN RUNNER PROCESSING
	BNE OUT3B
	AND Z,RNRFLG
	STA Z,RNROUT
	BNE OUT3B		;SEE IF LAST STEP
OUT5:	ASL
	BIT Z,RNRFLG		;ANYONE ON BASE?
	BEQ OUT6
	ASL Z,RNRFLG
	JSR SETRN0		;INITIALISE RUNNER CONTROLS
	STA Z,RNROUT		;FORCE ALL RUNNERS RUNNING AND OUT
	JMP OUT3B
OUT6:	LDX I,2
	BIT A,TGLSW		;EXTENDED PLAY?
	BVS OUT4A		;YES
	LDX I,1			;NO
OUT4A:	CPX Z,INNING
	BNE OUT4B
	BIT Z,PCOKD
	BPL OUT6B
;	LDA Z,SCR0		;BOTTOM OF LAST INNING
;	CMP Z,SCR1		;SEE IF SCORE 0 < SCORE 1
;	BMI OUT6B		;YES
;	BPL OUT4
OUT4B:	BIT Z,PCOKD		;TOP OF THE INNING
	BMI OUT4
	INC Z,INNING
OUT4:	LDA I,40
	ORA Z,SPCFCT		;SET CHANGE SIDES
	STA Z,SPCFCT
	JMP BGPTCH		;START OVER
OUT6B:	LDA I,100		;SET ATTRACT MODE
	ORA Z,SPCFCT
	STA Z,SPCFCT
	LDA I,0
	STA Z,PCOKD
OUT6C:	JMP ATTRCT


UPDTBL:	LDA Z,BXL
	CLC
	ADC Z,XVELL		;UPDATE BALL X POSITION
	STA Z,BXL
	LDA Z,BX
	ADC Z,XVELH
	STA Z,BX
	LDA Z,BYL
	CLC
	ADC Z,YVELL
	STA Z,BYL		;UPDATE BALL Y POSITION
	LDA Z,YVELH
	ADC Z,BY
	STA Z,BY
	LDA Z,VELL
	BNE UPDT0
	LDA Z,VELH
	BNE UPDT0
	LDA I,200
	STA Z,VELL
UPDT0:	SEC
	LDX I,0
	LDA I,20
	BIT Z,PCOKD
	BEQ UPDT1
	BPL UPDT2
	INX
UPDT2:	LDA ZX,SCR0		;FIND OUT IF SCORE < 3
	CMP I,3
	BMI UPDT1
	LDA Z,VELL
	SBC I,4
	STA Z,VELL
	LDA Z,VELH
	SBC I,0
	STA Z,VELH
UPDT1:	RTS
	
	.EVEN
PLYADH:	.WORD PHI
PLYADL:	.WORD PLO
PHI:	.BYTE 12.,5,5,210,7,205,200,203,5,30,202,201,206,10,207
	.BYTE 2,43,210,07,4,50,2,1,200,203,4,66,202,201,101,102
	.BYTE 2,75,10,207,3,100,207,210,7,4,112,2,1,200,203
	.BYTE 4,124,202,201,101,102,1,137,10
	.BYTE 12,154,2,1,200,203,300,300,202,201,101,102
	.BYTE 6,216,2,1,11,111,101,102
PLO:	.BYTE 12.,6,205,307,316,311,316,316,311,6,156,202,201,104,4,200,203
	.BYTE 3,245,324,325,317,12,214,202,201,0,102,300,300,2,1,200,203
	.BYTE 4,234,314,314,301,302,4,252,202,201,0,102,4,264,2,1,200,203
	.BYTE 6,272,305,313,311,322,324,323,4,310,202,201,0,102
	.BYTE 4,326,2,1,200,203,3,347,5,0,102,3,370,2,1,6
ALTBA:	.BYTE 110,110,104,104,102,100,100,76
ALTBB:	.BYTE 254,260,264,270,274,300,304,310
	.BYTE 314,320,324,330,334,334,334,334
SPDTBL:	.BYTE 200,200,160,160,140,140,100,40
	.PAGE
	.SBTTL CONTROL BIT DEFINITIONS
;TGLSW	BIT	0 = START GAME/STOP RUNNER
;		BIT 	1 = COIN0
;		BIT 	2 = COIN1
;		BIT	3 = DIAGNOSTIC MODE
;		BIT	4 = COIN0 OPTION. 0 = 1 COIN, 2 = 2 COINS
;		BIT	5 = COIN1 OPTION. 3 = 4 COINS, 4 = 4 COINS 
;		BIT	6 = 1 = 2 INNINGS, 0 = 1 INNING
;		BIT	7 = 
PFLDH=7000
PFLDL=6400
PLFLDH=7000
PLFLDL=6400
PVLD=4006
PHLD=4007
BVLD=4004
BHLD=4005
POTDIR=4003
RDVPT=4002
PCHPIX=4001
POTOFF=4400
WTCHDG=4000
LAMP=5000
CROWD3=5001
FOOT=5002
CROWD1=5004
CROWD2=5003
BATSND=5005
WSL1=5007
WSL2=5006
TGLSW=5400
TOP=20
BOTTOM=374		;BOTTOM OF SCREEN ADDRESS
T1=32			;HIGH THRESHOLD CONSTANT
VMIN=0			;MINIMUM VELOCITY TO PITCH
VMAX=16			;MAXIMUM VELOCITY TO PITCH
BDCELL=0
BDCELH=0


;
; PCOKD USAGE = BIT 001 - PITCH COCKED
;		    002 - BALL IN FLIGHT
;		    004 - VERTICAL SYNC PROCESSED
;		    008 - DISPLAY ENABLE
;                   016 - PITCHER FREE TO RUN
;                   032 - PITCHER IN PURSUIT OF RUNNER
;		    064 - HOME RUN
;		    128 - SIDE WHICH IS AT BAT
;


; SOUND  = BIT 001 - BAT SOUND
;        = BIT 002 - CROWD
;        = BIT 004 - LOUD/SOFT
;        = BIT 008 - FOOTSTEP ON/OFF
;	 = BIT 016 -
;	 = BIT 032 -
;
; SPCFCT = BIT 001 - DON'T ALLOW PITCHING
;	 = BIT 002 - FLASH BALL
;	 = BIT 004 - FLASH OUT
;	 = BIT 008 - FLASH SCORE
;	 = BIT 016 - FLASH HOME RUN
;	 = BIT 032 - CHANGE SIDES
;	 = BIT 064 - ATTRACT MODE
PCOKD=336
BLPTY=335
BLPTX=334
BTPTY=333
BTPTX=332
BLVEL=331
WKX=330
WKA=327
PX=326
PXL=325
PY=324
PYL=323
PTCPIX=322
BX=321			;WORK RAM IN PAGE 0
BXL=320
BY=317
BYL=316
WKH1=315
WKH2=314
WKH3=313
PTFLG=312
VELFLG=311
PLYFLG=310
YVELH=277
YVELL=276
XVELH=275
XVELL=274
VELH=273
VELL=272
ANGLE=271
BTVEL0=270
SPDCST=266
WKB=264
WKF=263
WKE=262
WKD=261
WKC=260
INNING=257
OUT=256
BALL=255
STRK=254
RNRFLG=253
RNDX=252
PTNDX=251
STEP=250
SCRNAD=240
BTVEL=237
SCR1=236
SCR0=235
FRMCNT=234
RNRPFL=233
SOUND=232
SPCFCT=231
SNDCNT=230
TOTRSW=227
RNROUT=226
CRDCNT=225
FTCNT=224
FTSPD=223
SPCNT1=222
SPCNT2=221
COINC=220
COINT0=217
COINT1=216
ATTCT=215
ATCTL=214
WHSCNT=213
PCHCTL=212
PTCHRP=211
ZHI=BLVEL
ZLO=WKC
SINE=210
COSINE=207
ZLOW=COSINE
BATPOS=340
PROX=2
MXFRM=2			 	;RUNNER TIMER COUNT

	.EVEN
VTBLA:	.WORD 400,500,600,700,1000,1400,1500,1600
SCTBA:	.BYTE 175,31,175,31,177,14,177,14,177,6,200,0,200,0,177,6
SCTBB:	.BYTE 161,74,166,61,172,45,175,31,177,14
	.BYTE 177,6,177,14,175,31,172,45
	.BYTE 166,61,161,74,152,107,143,121
	.BYTE 132,132,121,143,107,152
	.EVEN
COSAD:	.WORD COSINE
SINAD:	.WORD SINE

POTRD:	PHA		;PUSH A
	TXA
	PHA		;PUSH X
	TYA
	PHA		;PUSH Y
	CLD
	LDA A,RDVPT		;GET POT VALUE
	AND I,77		;MASK UPPER 2 BITS
	TAX			;STORE RESULT IN X
	LDA A,POTDIR		;GET POT DIRECTORS
	STA A,POTOFF
	TAY
	ORA Z,PTFLG
	STA Z,PTFLG
	CLI
	BIT Z,PCOKD
	BPL PT2
	TYA
	AND I,1
	BEQ PT4
	LDA Z,BTVEL0
	STA Z,BTVEL
	LDA Z,BTPTY
	STA Z,BTVEL0
PT4:	TYA
	LSR
	BCC S,+4
	STX Z,BTPTY
	LSR
	BCC S,+4
	STX Z,BTPTX
	LSR
	BCC S,+4
	STX Z,BLPTY
	LSR
	BCC PT3
	STX Z,BLPTX
	BCS PT3
PT2:	TYA
	AND I,4
	BEQ PT5
	LDA Z,BTVEL0
	STA Z,BTVEL
	LDA Z,BTPTY
	STA Z,BTVEL0
PT5:	TYA
	LDY I,3
PT1:	LSR
	BCC PT0
	STX ZY,BTPTX		;STORE UPDATED POT VALVE
PT0:	DEY
	BPL PT1
PT3:	PLA
	TAY		;PULL Y
	PLA
	TAX		;PULL X
	PLA		;PULL A
	RTI


VSYNC:	PHA		;PUSH ACC
	TXA
	PHA		;PUSH X
	TYA
	PHA		;PUSH Y
	CLD
	LDA I,2
	BIT Z,PCOKD		;TEST FOR BALL IN FLIGHT
	BNE INFLT
	LDA Z,BY
	LSR			;DIVIDE BY 8
	LSR
	LSR
	TAX
	CLC
	ADC I,204		;ADD IT TO BASE POSITION
	STA A,BVLD		;UPDATE BALL'S Y POSITION
	TXA
	ORA I,10
	STA A,PCHPIX
	JMP VS0
INFLT:	LDA Z,BY
	STA A,BVLD
	LDA Z,BX
	STA A,BHLD
VS0:	LDA I,4			;INDICATE SYNC PROCESSED
	ORA Z,PCOKD
	STA Z,PCOKD
	LDA I,20
	BIT  Z,PCOKD		;SEE IF PITCHER FREE TO RUN
	BEQ VS1
	LDA Z,PY
	STA A,PVLD
	LDA Z,PX
	STA A,PHLD
	LDA Z,PTCHRP
	STA A,PCHPIX
VS1:	LDA I,10		;SEE IF VSYNC MUST TRUNCATE PROCESSING
	BIT Z,PCOKD
	BNE VS2A
	JMP VSE
VS2A:	LDA Z,RNRFLG
	BIT Z,RNRPFL		;SEE IF TIME TO UPDATE CONSTANTS
	BNE VS2
	LDA A,POTDIR
	STA A,POTOFF		;DISABLE INTERRUPTS
	CLI
	LDA I,125
	BIT Z,RNRFLG
	BNE VS2C
	LDA I,20
	BIT Z,PCOKD		;SEE IF BATTER UP?
	BNE VS2C
	LDA I,357
	STA A,PFLDL+122
	LDA Z,BTPTY
	LSR
	LSR
	LSR
	ORA I,360
	STA A,PFLDL+121
	ORA I,10
	STA A,PFLDL+120
VS2C:	LDA Z,INNING
	ORA I,340
	STA A,PFLDL+203
	LDA Z,STRK
	ORA I,340
	STA A,PFLDL+270
	LDA Z,OUT
	ORA I,340
	STA A,PFLDL+243
	LDA I,6
	BIT Z,SPCFCT		;SPECIAL EFFECTS?
	BNE SCRLP
	LDA Z,BALL
	ORA I,340
	STA A,PFLDL+230
SCRLP:	LDX I,37
	LDA Z,SCR0
HXLP:	JSR HXDSP
	LDA Z,SCR1
	LDX I,3
	JSR HXDSP
VS2:	LDA Z,SPCNT1
	SEC
	SBC I,1
	BEQ VS3A
	STA Z,SPCNT1
	LDA Z,RNRPFL
	BIT Z,RNRFLG
	BNE VS2B
	JMP VS5
VS2B:	JMP VS4
VS3A:	LDA Z,RNRPFL
	BIT Z,RNRFLG		;ANY RUNNERS RUNNING?
	BNE VS2B
VS3B:	LDA I,8.
	STA Z,SPCNT1		;RESET FRAME COUNT
	LDA I,377
	BIT Z,SPCFCT		;ANY SPECIAL EFECTS?
	BEQ VS2B		;RETURN IF NOT
	INC Z,SPCNT2
	LDX I,8.
	LDA I,2
	BIT Z,SPCFCT		;BALL 4?
	BEQ VS3C
	LDA I,1
	BIT Z,SPCNT2		;BLINK COUNT ODD?
	BEQ VS3D		;BLANK MESSAGE IF NOT
VS3E:	LDA AX,BALL4M-1
	STA AX,PLFLDL+227
	DEX
	BNE VS3E
	BEQ VS3ZZZ
VS3D:	LDA I,300
	STA AX,PLFLDL+227
	DEX
	BNE VS3D
	BEQ VS3ZZZ
VS3C:	ASL
	BIT Z,SPCFCT		;OUT?
	BEQ VS3F
	LDX I,3
	LDA I,1
	BIT Z,SPCNT2		;BLINK COUNT ODD?
	BEQ VS3G
VS3R:	LDA AX,OUTM-1		;WRITE OUT X
	STA AX,PLFLDL+244
	DEX
	BNE VS3R
	BEQ VS3GA
VS3ZZZ:	JMP VS3XYZ
VS3G:	LDA I,300		;BLANK OUT
	STA AX,PLFLDL+244
	DEX
	BNE VS3G
VS3GA:	LDA I,4
VS3F:	ASL
	BIT Z,SPCFCT		;RUNNER IN AT HOME?
	BEQ VS3H
VS3FA:	LDX I,3
VS3FB:	LDA I,1
	BIT Z,SPCNT2		;BLINK COUNT ODD
	BNE VS3I
VS3J:	LDA AX,RUNM-1
	STA AX,PLFLDH+317
	DEX
	BNE VS3J
	BEQ VS3IC
VS3I:	LDA I,300		;BLANK RUN
VS3IA:	STA AX,PLFLDH+317
	DEX
	BNE VS3IA
VS3IC:	LDA I,10
VS3H:	ASL
	BIT Z,SPCFCT		;HOME RUN?
	BEQ VS3K
	LDX I,12.
	LDA I,1
	BIT Z,SPCNT2		;BLINK COUNT ODD
	BEQ VS3L
	LDA I,300		;BLANK *HOME RUN*
VS3M:	STA AX,PLFLDH+312
	DEX
	BNE VS3M
	BEQ VS3ZZZ
VS3L:	LDA AX,HMRM-1		;WRITE *HOME RUN*
	STA AX,PLFLDH+312
	DEX
	BNE VS3L
	BEQ VS3ZZZ
VS3K:	ASL
	LDX I,7
	BIT Z,SPCFCT		;CHANGE SIDES?
	BEQ VS3RA
	LDA I,1
	BIT Z,SPCNT2		;BLINK COUNT ODD?
	BNE VS3N
	LDA I,300
VS3KA:	STA AX,PFLDL+103	;ERASE BATTER
	DEX
	BNE VS3KA
	LDX I,7
VS3KB:	STA AX,PFLDL+130	;ERASE PITCHER
	DEX
	BNE VS3KB
	LDA I,352		;LOAD DOWN ARROW
	STA A,PFLDL+47
	STA A,PFLDL+74
	BNE VS3PC
VS3N:	BIT Z,PCOKD
	BPL VS3P
	LDX I,7
VS3NA:	LDA AX,BTM-1
	STA AX,PFLDL+103
	DEX
	BNE VS3NA
	LDX I,7
VS3NB:	LDA AX,PTM-1
	STA AX,PFLDL+130
	DEX
	BNE VS3NB
	BEQ VS3PD
VS3P:	LDX I,7
VS3PA:	LDA AX,PTM-1
	STA AX,PFLDL+103
	DEX
	BNE VS3PA
	LDX I,7
VS3PB:	LDA AX,BTM-1
	STA AX,PFLDL+130
	DEX
	BNE VS3PB
VS3PD:	LDA Z,SPCNT2
	CMP I,27
	BEQ VS3PC
	LDA I,300
	STA A,PFLDL+47
	STA A,PFLDL+74
VS3PC:	JMP VS3XYZ
VS3RA:	ASL
	BIT Z,SPCFCT
	BEQ VS3XYZ
	LDX I,13.
	LDA Z,COINC		;ANY COINS?
	BEQ VS3RAA		;NO
	ORA I,340
	STA A,PFLDH+331
	LDX I,14.
VS3RAB:	LDA AX,CNACP-1
	STA AX,PFLDH+311
	DEX
	BNE VS3RAB
	LDA I,1
	CMP Z,COINC
	BPL VS3XYZ
	LDA I,323
	STA A,PFLDH+323
	BNE VS3XYZ
VS3RAA:	LDA I,1
	BIT Z,SPCNT2		;BLINK COUNT ODD?
	BEQ VS3RB
	LDA I,300
VS3RC:	STA AX,PLFLDH+312
	DEX
	BNE VS3RC
	BEQ VS3XYZ
VS3RB:	LDA AX,GMOVR-1		;WRITE *GAME OVER*
	STA AX,PLFLDH+312
	DEX
	BNE VS3RB
VS3XYZ:	LDA Z,SPCNT2
	CMP I,27
	BNE VS4
	LDA I,377
	STA Z,SPCNT2
	LDA I,300
	AND Z,SPCFCT
	STA Z,SPCFCT
	LDA I,0
	STA Z,STRK
	STA Z,BALL
	LDA I,100
	BIT Z,PCOKD
	BEQ VS4
	LDA I,20
	ORA Z,SPCFCT
	STA Z,SPCFCT		;KEEP FLASHING * HOME RUN *
VS4:	JSR BSRNR		;DO BASE RUNNER MOTION
	JSR SCTRL
VSE:	PHP
	PLA
	AND I,4			;INTERRUPTS ON?
	BEQ VSEA		;YES
	LDA I,377		;NO
	STA A,POTOFF
VSEA:	PLA			;PULL Y
	TAY
	PLA			;PULL X
	TAX
	PLA			;PULL ACC
	RTI			;EXIT

VS5:	BIT Z,SPCFCT
	BVC VS4
	DEC Z,ATTCT		;TIME TO CHANGE MESSAGES?
	BEQ VS3RA5		;YES
	LDA Z,ATTCT		;TIME TO ERASE MESSAGE?
	CMP I,1
	BNE VS4			;NO
	LDA I,300		;YES
	LDX I,32.
VS3RA3:	STA AX,PFLDH+337	;CLEAR TOP LINE OF SCREEN
	DEX
	BNE VS3RA3
	BEQ VS4			;EXIT
VS3RA5:	LDA I,3
	BIT Z,ATCTL		;COIN MESSAGE?
	BNE VS3RA1		;NO
	LDA I,60		;YES
	AND A,TGLSW		;HOW MANY COINS?
	LSR			;0=25, 2=50, 4=4 COINS
	LSR
	LSR
	TAX
	LDA AX,COINMA		;SELECT PROPER COIN MESSAGE ADDRESS
	STA Z,WKC
	LDA AX,COINMA+1
	STA Z,WKD
	BNE VS3RA2
VS3RA1:	AND Z,ATCTL
	ASL
	TAX
	LDA AX,DIRMA-2
	STA Z,WKC
	LDA AX,DIRMA-1
	STA Z,WKD
VS3RA2:	LDY I,0
	LDA NY,WKC		;GET COUNT
	STA Z,WKE
	INY
	LDA NY,WKC		;GET ADDRESS
	TAX
	INY
VS3RA4:	LDA NY,WKC		;GET DATA
	STA AX,PFLDH+341
	INY
	INX
	DEC Z,WKE
	BNE VS3RA4
	CLC
	LDA Z,ATCTL
	ADC I,1
	AND I,3
	TAX
	LDA I,374
	AND Z,ATCTL
	STA Z,ATCTL
	TXA
	ORA Z,ATCTL
	STA Z,ATCTL
	LDA I,200
	STA Z,ATTCT		;TIME MESSAGE DISPLAY
	JMP VS4


OCTDSP:	PHA
	LSR
	LSR
	LSR
	ORA I,340
	STA AY,PFLDH+240
	DEY
	PLA
	AND I,7
	ORA I,340
	STA AY,PFLDH+240
	RTS
HXDSP:	PHA
	LSR
	LSR
	LSR
	LSR
	ORA I,340
	STA AX,PFLDH+300
	DEX
	PLA
	AND I,17
	ORA I,340
	STA AX,PFLDH+300
	RTS

CLN0:	LDA I,0			;SET LOW SCREEN ACCESS
	STA Z,OUT
	STA Z,BALL
	STA Z,STRK
	STA Z,INNING
	STA Z,PLYFLG
	STA Z,PCOKD
	STA Z,SPCNT2
	STA Z,RNRFLG
	JSR CLR0
	LDA I,200		;SET HIGH SCREEN ACCESS
	STA Z,PLYFLG
	JSR CLR0
	LDA A,PLYADH		;HI PLAYFIELD ADDRESS
	STA Z,WKA
	LDA A,PLYADH+1
	STA Z,WKX
	JSR PLYFLD		;WAIT FOR SYNC, PUT PLAYFIELD ON TV
	LDA A,PLYADL
	STA Z,WKA
	LDA A,PLYADL+1
	STA Z,WKX
	LDA I,0
	STA Z,PLYFLG		;SET LOW SCREEN ACCESS
	JSR PLYFLD		;WAIT FOR SYNC, PUT PLAYFIELD ON TV
	RTS

CLN1:	SEI
	JSR SYNWT0
	LDA I,204
	STA A,BVLD
	LDA I,203
	STA Z,BX
	STA A,BHLD
	LDA I,220
	STA A,PVLD
	STA Z,PY
	LDA I,170
	STA A,PHLD
	STA Z,PX
	LDA I,17
	STA A,POTOFF
	LDA I,0
	STA Z,PTFLG
	STA Z,PYL
	STA Z,PXL
	STA Z,BY
	LDA I,10.
	STA Z,FTSPD
	RTS

CLR0:	LDX I,0
	LDA I,40
	STA Z,WKA
BLNK:	JSR BLANK
	LDA I,40
	CLC
	ADC Z,WKA
	STA Z,WKA
	CMP I,40
	BNE BLNK
	RTS
BLANK:	JSR SYNWT0
	LDA A,WTCHDG
	LDA I,300
	STA Z,ATCTL
	BIT Z,PLYFLG
	BMI CLP1H
CLP1L:	STA AX,PFLDL
	INX
	CPX Z,WKA
	BNE CLP1L
CLP2:	LDA I,0
	STA Z,BY
	RTS
CLP1H:	STA AX,PFLDH
	INX
	CPX Z,WKA
	BNE CLP1H
	BEQ CLP2

PLYFLD:	LDY I,0
	LDA NY,WKA		;GET COUNT
	STA Z,WKC		;SAVE TOTAL COUNT
	LDX I,0
	INC Z,WKA		;BUMP POINTER ADDRESS
	BNE PLYLP1
	INC Z,WKX
PLYLP1:	JSR SYNWT0		;WAIT FOR VERTICAL SYNC
	LDA A,WTCHDG
	LDA NY,WKA		;GET DATA COUNT
	STA Z,WKD		;WKD=COUNT OF DATA
	INY
	LDA NY,WKA		;GET ADDRESS
	TAX
	INY
PLYLP0:	LDA NY,WKA
	BIT Z,PLYFLG
	BPL PLYLP2
	STA AX,PFLDH
	JMP PLYLP3
PLYLP2:	STA AX,PFLDL
PLYLP3:	INY
	INX
	DEC Z,WKD
	BNE PLYLP0
	TYA
	CLC
	ADC Z,WKA
	STA Z,WKA
	BCC S,+4
	INC Z,WKX
	DEC Z,WKC
	BEQ PLYLP4
	LDY I,0
	BEQ PLYLP1
PLYLP4:	RTS

SYNWT:	LDA I,4
	BIT Z,PCOKD
	BEQ SYNWT		;WAIT FOR SYNC PROCESSED FLAG
	EOR Z,PCOKD		;ZERO SYNC PROCESSED FLAG
	STA Z,PCOKD
	RTS

SYNWT0:	LDA I,363
	AND Z,PCOKD
	STA Z,PCOKD		;ZERO DISPLAY CONTROL BIT
	JMP SYNWT

CLRZR1:	LDA I,341
	CLD
	LDX I,0
	LDY I,8.
	STX Z,SOUND
CLRS:	STA AX,LAMP		;CLEAR SOUNDS
	LSR
	INX
	DEY
	BNE CLRS
	LDY I,<ZHI-ZLOW>
	BNE CLRZ1
CLRZR0:	LDY I,<ZHI-ZLO>
CLRZ1:	LDX I,ZHI
	LDA I,0
	CLD
CLRZ:	STA ZX,0
	DEX
	DEY
	BNE CLRZ
	RTS

	.PAGE 
	.SBTTL BASE RUNNER CONTROL
BSRNR:	LDA I,125
	BIT Z,RNRFLG		;SEE IF ANY RUNNERS
	BNE BSR2
	RTS
BSR2:	BIT Z,RNRPFL		;SEE IF RUNNER PROCESS TIME
	BNE BSR6
	JMP EBSR0		;GO COUNT FRAMES IF NOT
BSR6:	LDA Z,RNRPFL
	BIT Z,RNRFLG		;SEE IF RUNNER ACTIVE
	BNE BSR7
	JMP IGNRNR
BSR7:	LDX Z,RNDX
	LDA ZX,SCRNAD
	STA Z,WKE
	LDA ZX,SCRNAD+1
	STA Z,WKF
	LDA I,1
	BIT Z,TOTRSW
	BEQ BSR7A
	JMP BSR8
BSR7A:	LDA Z,PTNDX
	CMP I,TOTPAT		;SEE IF PATTERN INDEX AT LIMIT
	BPL BSR10
	JMP NXTPAT
BSR10:	LDA I,1
	STA Z,TOTRSW
	INC Z,STEP
	LDA Z,STEP
	CMP I,6			;MAXIMUM STEPS
	BNE BSR5
	CLC
	ROL Z,RNRFLG		;INDICATE RUNNER ON BASE
	BPL EBSR4
	LDA Z,SOUND
	ORA I,6
	AND I,367		;TURN OFF FOOTSTEPS
	STA Z,SOUND		;LOUD CROWD SOUNDS FOR HOME RUN
	LDA I,120
	BIT Z,SPCFCT		;HOME RUN BIT SET?
	BNE BSR11
	LDA I,10		;ELSE SET FLASH SCORE BIT
	ORA Z,SPCFCT
	STA Z,SPCFCT
BSR11:	SEC
	BIT Z,SPCFCT		;ATTRACT MODE?
	BVS KPRN0		;YES
	SED			;NO
	LDA Z,OUT
	CMP I,3			;3 OUTS?
	BPL EBSR4
	BIT Z,PCOKD
	BMI SCOR1
	LDA Z,SCR0
	ADC I,1
	STA Z,SCR0
	BNE EBSR4
SCOR1:	LDA Z,SCR1
	ADC I,1
	STA Z,SCR1
EBSR4:	LDA I,40
	CLD
	BIT Z,PCOKD		;PITCHER IN PURSUIT OR HOME RUN
	BNE EBSR1		;PITCHER IN PURSUIT. STOP
	BVS KPRN0		;HOME RUN KEEP GOING
	BIT Z,SPCFCT		;ATTRACT MODE?
	BVS KPRN0		;YES
	LDA I,01		;NO
	BIT A,TGLSW		;RUNNER HALT PRESSED?
	BEQ EBSR1		;YES
KPRN0:	ROL Z,RNRFLG		;KEEP RUNNING
	BNE BSR3
	LDA I,277
	AND Z,PCOKD		;ZERO HOME RUN BIT
	STA Z,PCOKD
	RTS
BSR3:	JSR SETRN0
EBSR1:	RTS
BSR5:	LDA I,0
	STA Z,PTNDX
	BIT Z,PCOKD		;HOME RUN SET?
	BVC BSR8		;YES
	LDA I,18.
	STA Z,PTNDX
BSR8:	LDA AX,ADDINC		;GET SCREEN ADDRESS INCREMENT
	CLC
	ADC ZX,SCRNAD
	STA Z,WKE
	STA ZX,SCRNAD
	LDA AX,ADDINC+1
	ADC ZX,SCRNAD+1
	STA Z,WKF
	STA ZX,SCRNAD+1
NXTPAT:	LDA Z,STEP
	ASL
	ASL
	ASL
	ADC Z,RNDX
	TAY
	LDA AY,FILPAT
	STA Z,WKC
	LDA AY,FILPAT+1
	STA Z,WKD
	JSR PPT0		;PUT FILLER PATTERN
	LDA Z,RNROUT
	AND Z,RNRPFL
	BEQ NXTP2
	EOR Z,RNRFLG
	STA Z,RNRFLG
	LDA Z,OUT
	CMP I,3
	BPL BSR13
	INC Z,OUT
BSR13:	LDA I,4
	ORA Z,SPCFCT
	STA Z,SPCFCT
	JMP IGNRNR
NXTP2:	LDA ZX,SCRNAD
	STA Z,WKE
	LDA ZX,SCRNAD+1
	STA Z,WKF
	LDA Z,STEP
	CMP I,5
	BNE NXTP0
	LDA Z,PTNDX
	CMP I,TOTPAT-6		;LAST PATTERN OF LAST STEP?
	BNE NXTP0
	LDA AX,LSTPTT
	STA Z,WKC
	LDA AX,LSTPTT+1
	STA Z,WKD
	JSR PPT0
	JMP IGNRNR
NXTP0:	LDA AX,PATTRN
	STA Z,WKC
	LDA AX,PATTRN+1
	STA Z,WKD
NXTP1:	JSR PUTPAT		;WRITE DATA TO TV
IGNRNR:	INC Z,RNDX
	INC Z,RNDX
	CLC
	ROL Z,RNRPFL
	ROL Z,RNRPFL
	BCC EBSR2
	LDA I,5			;LOAD BYTES PER PATTERN - 1
	ADC Z,PTNDX
	STA Z,PTNDX
	LDA I,0
	STA Z,TOTRSW
	BEQ EBSR2
EBSR0:	DEC Z,FRMCNT
	BEQ EBSR3
	RTS
EBSR3:	SEC
	ROL Z,RNRPFL		;SET RUNNER IN MOTION
	LDA I,0
	STA Z,RNDX		;CLEAR RUNNER INDEX
EBSR2:	LDA I,MXFRM
	STA Z,FRMCNT
	RTS

PUTPAT:	LDA Z,PTNDX
	CLC
	ADC Z,WKC		;INDEX TO PATTERN BYTE
	STA Z,WKC
	BCC PPT0
	INC Z,WKD
PPT0:	LDY I,0
PPT1:	LDA NY,WKC		;GET PATTERN BYTE
	BEQ PPT5
	STA NY,WKE		;STORE IT ON TV
PPT5:	INY
	CPY I,3			;TEST AGAINST BYTES PER LINE
	BNE PPT1
	CLC
	TYA
	ADC Z,WKC
	STA Z,WKC
	BCC PPT4
	INC Z,WKD
PPT4:	LDA I,40
	CLC
	ADC Z,WKE
	STA Z,WKE
	BCC PPT3
	INC Z,WKF
PPT3:	LDY I,0
PPT2:	LDA NY,WKC
	BEQ PPT6
	STA NY,WKE
PPT6:	INY
	CPY I,3
	BNE PPT2
	RTS

SETRUN:	SEC
	ROL Z,RNRFLG
SETRN0:	PHA
	LDA I,0
	STA Z,RNROUT
	STA Z,RNDX
	STA Z,STEP
	STA Z,PTNDX
	STA Z,TOTRSW
	STA Z,RNRPFL
	LDA I,MXFRM
	STA Z,FRMCNT
	LDA I,10
	ORA Z,SOUND		;TURN ON FOOT STEPS
	STA Z,SOUND
	LDX I,8.
SRN0:	LDA AX,SCADT-1		;FILL SCREEN ADDRESSES
	STA ZX,SCRNAD-1
	DEX
	BNE SRN0
	PLA
	RTS

RNOUT:	LDA I,40
	BIT Z,PCOKD
	BNE RNOUT5
	RTS
RNOUT5:	LDX I,0
	LDA I,1
	STA Z,WKF
	LDY I,0
	LDA Z,PTNDX
	CMP I,0
	BEQ RNOUT0
	INY
	INY
	CMP I,6
	BEQ RNOUT0
	INY 
	INY
	CMP I,12.
	BEQ RNOUT0
	INY 
	INY
RNOUT0:	LDA Z,WKF
	BIT Z,RNRFLG		;SEE IF RUNNER ACTIVE
	BEQ RNOUT2
	LDA ZX,SCRNAD
	STA Z,WKE
	LDA AX,ROINCA
	STA Z,WKC
	LDA AX,ROINCA+1
	STA Z,WKD
	LDA ZX,SCRNAD+1
	ASL Z,WKE
	ROL
	ASL Z,WKE
	ROL
	ASL Z,WKE
	ROL
	AND I,17		;A=Y POSITION, WKE=X POSITION
	EOR I,7
	ASL
	ASL
	ASL
	ASL
	ADC NY,WKC		;ADD Y POSITION INCREMENT
	SEC
	SBC Z,BY
	BCS RNOUT1
	EOR I,377
	ADC I,1
RNOUT1:	CMP I,10
	BCS RNOUT2
	INY
	LDA Z,WKE
	EOR I,370
	ADC NY,WKC		;ADD X POSITION INCREMENT
	DEY
	SEC
	SBC Z,BX
	BCS RNOUT3
	EOR I,377
	ADC I,1
RNOUT3:	CMP I,10
	BCS RNOUT2
	LDA Z,RNROUT
	ORA Z,WKF
	STA Z,RNROUT
RNOUT4:	RTS
RNOUT2:	INX
	INX
	CLC
	ROL Z,WKF
	ROL Z,WKF
	CPX I,10
	BNE RNOUT0
	RTS

SCTRL:	LDA I,1
	BIT Z,SPCFCT
	BVC SCTRLA
	LDA I,0
	STA Z,SOUND
SCTRLA:	STA A,CROWD3
SCNTAT:	LDA I,1
	BIT Z,SOUND		;BAT THUNK?
	BEQ SCTRL1
	EOR Z,SOUND		;TURN OFF BAT SOUND SWITCH
	STA Z,SOUND
	LDA I,0
	STA A,BATSND		;TURN ON BAT SOUND
	BEQ SCTRL2
SCTRL1:	STA A,BATSND		;TURN OFF BAT SOUND
SCTRL2:	LDA I,2
	BIT Z,SOUND		;CHECK FOR CROWD
	BEQ SCTRL3
	LDA I,1
	STA A,CROWD1		;TURN ON CROWD SOUNDS
	BNE SCTRL4
SCTRL3:	STA A,CROWD1		;TURN OFF CROWD SOUND
SCTRL4:	LDA I,4
	BIT Z,SOUND
	BEQ SCTRL5
	LDA I,1
	STA A,CROWD2		;CROWD SOUND LOUD
	INC Z,CRDCNT
	LDA Z,CRDCNT
	CMP I,90.		;COUNT =3 SECONDS?
	BNE SCTRLB
	LDA I,353
	AND Z,SOUND
	STA Z,SOUND
	LDA I,0
	STA Z,CRDCNT
	BEQ SCTRLC
SCTRLB:	CMP I,60.		;COUNT = 1 SECOND?
	BMI SCTRL6
SCTRLC:	LDA I,1
SCTRL5:	STA A,CROWD2
SCTRL6:	LDA I,10
	BIT Z,SOUND		;SEE IF FOOTSTEP ACTIVE
	BEQ SCTRL7
	LDA I,0
	CMP Z,FTCNT		;SEE IF TURN ON TIME
	BNE SCTRL8
	LDA Z,FTSPD
	STA Z,FTCNT
	LDA I,1
	STA A,FOOT
	BNE SCTRL9
SCTRL8:	DEC Z,FTCNT
SCTRL7:	STA A,FOOT
SCTRL9:	RTS
	.EVEN
PATTRN:	.WORD PTHF,PTFS,PTST,PTTH		;ADDRESS TABLE FOR RUNNERS
LSTPTT:	.WORD PTLHF,PTLFS,PTLST,THRD5
SCADT:	.WORD PFLDL+120,PFLDL+345,PFLDH+220,PFLDL+371
ADDINC:	.WORD 36,42,-36,-42
SCND4:	.BYTE 202,201,206,101,102,300
THRD4:	.BYTE 4,200,203,300,103,100
HM5:	.BYTE 300,5,101,7,205,200
FST5:	.BYTE 1,11,111,300,300,300
SCND5:	.BYTE 6,300,300,206,10,207
THRD5:	.BYTE 300,300,300,201,104,4
TOTPAT=24.			;NUMBER OF BYTES PER RUNNING POSITION

FILPAT:	.WORD HM0,FST0,SCND0,THRD0		;STEP 0
	.WORD HM1,FST1,FILHF,FILFS		;STEP 1
	.WORD FILHF, FILFS, FILHF,FILFS		;STEP 2
	.WORD FILHF,FILFS,FILHF,FILFS		;STEP 3
	.WORD FILHF,FILFS,SCND4,THRD4		;STEP 4
	.WORD HM5,FST5,SCND5,THRD5		;STEP 5
PTHF:	.BYTE 0,42,41,0,44,43
	.BYTE 0,46,45,0,47,0
	.BYTE 51,50,0,53,52,0
	.BYTE 0,0,0,40,0,0
PTFS:	.BYTE 141,142,0,143,144,0
	.BYTE 145,146,0,0,147,0
	.BYTE 0,150,151,0,152,153
	.BYTE 0,0,0,0,0,140
PTST:	.BYTE 55,54,0,57,56,0
	.BYTE 61,60,0,0,62,0
	.BYTE 0,64,63,0,66,65
	.BYTE 0,0,140,0,0,0
PTTH:	.BYTE 0,154,155,0,156,157
	.BYTE 0,160,161,0,162,0
	.BYTE 163,164,0,165,166,0

	.BYTE 40,0,0,0,0,0
PTLHF:	.BYTE 0,0,0,67,0,0
PTLFS:	.BYTE 0,0,0,0,67,0
PTLST:	.BYTE 0,0,0,0,167,0
FILHF:	.BYTE 202,201,101,101,102,300
FILFS:	.BYTE 100,200,203,300,103,100

HM0:	.BYTE 300,300,300,104,4,200
FST0:	.BYTE 300,300,106,210,110,205
SCND0:	.BYTE 11,111,101,300,300,300
THRD0:	.BYTE 100,105,300,201,206,10

HM1:	.BYTE 202,201,104,101,102,300
FST1:	.BYTE 205,200,203,300,103,100

ROINCA:	.WORD HFINC,FSINC,STINC,THINC
HFINC:	.BYTE 24,0,20,4,14,7,10,14
FSINC:	.BYTE 22,11,16,4,12,2,6,-4
STINC:	.BYTE 12,9.,16,4,23,1,27,-4
THINC:	.BYTE 13,-1,16,4,22,7,27,14
BALL4M:	.BYTE 344,300,300,300,314,314,301,302
OUTM:	.BYTE 324,325,317
RUNM:	.BYTE 316,325,322
HMRM:	.BYTE 337,300,316,325,322,300,305,315,317,310,300,337
PTM:	.BYTE 322,305,310,303,324,311,320
BTM:	.BYTE 300,322,305,324,324,301,302

DIRMA:	.WORD ATTM,ATTM,ATTM
COINMA:	.WORD C25CNT,C50CNT,C4COIN,C4COIN
C25CNT:	.BYTE 17.,10,305,315,301,307,300,322,305,320,300 ;25 CENTS PER GAME
	.BYTE 323,324,316,305,303,300,345,342
C50CNT:	.BYTE 17.,10,305,315,301,307,300,322,305,320,300 ;50 CENTS PER GAME
	.BYTE 323,324,316,305,303,300,340,345
C4COIN:	.BYTE 14.,12,323,316,311,317,303,300,344,300     ;INSERT 4 COINS
	.BYTE 324,322,305,323,316,311
CNACP:	.BYTE 304,305,324,320,305,303,303,301,300,300,316,311,317,303
ATARI:	.BYTE 311,322,301,324,301
PATCH0:	LDA I,1
	BIT PCOKD		;SIDE UP?
	BPL 2$
	LDA I,4
2$:	BIT PTFLG		;POT INTERRUPT?
	BEQ 3$			;NO. DO TIMER
	JMP PCH8		;YES. DO POT ROUTINE
3$:	LDA I,4
	BIT PCOKD		;VSYNC?
	BEQ 4$			;NOPE. KEEP RUNNING
	EOR PCOKD		;RESET SYNC FLAG
	STA PCOKD
	LSR			;PITCH COCKED?
	BCC 4$			;NO. DON'T DO TIME
	DEC WKA			;TIMEOUT?
	BPL 4$			;NO
	JMP PCH5		;YES. FORCE A PITCH
4$:	JMP PITCH		;GO TO PITCH LOOP
	
	.REPT ^H1FAE-.
	.BYTE 0
	.ENDR

	.=^H1FAE
ATTM:	.BYTE 30.,1,322,305,316,316,325,322,300,307,301,324,300
	.BYTE 300,314,314,301,302,300,305,323,301,310,303,300
	.BYTE 322,305,310,303,324,311,320

GMOVR:	.BYTE 337,300,322,305,326,317,300,305,315,301,307,300,337
	.REPT 17772-.
	.BYTE 0
	.ENDR
	.=17772
VCTORS:	.WORD VSYNC,START,POTRD
	.END
                                                                                                                                                                                                                                                                                 